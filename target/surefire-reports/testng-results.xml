<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="18" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="55887" started-at="2015-04-10T15:44:37Z" finished-at="2015-04-10T15:45:33Z">
    <groups>
      <group name="dao">
        <method signature="MongeezTest.testChangesWContextContextNotSet()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextNotSet" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testChangesWContextContextSetToOrganizations()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextSetToOrganizations" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testChangesWContextContextSetToUsers()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextSetToUsers" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testFailDuplicateIds()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailDuplicateIds" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testFailOnError_False()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailOnError_False" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testFailOnError_True()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailOnError_True" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testMongeez()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testMongeez" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testNoFailureOnEmptyChangeLog()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFailureOnEmptyChangeLog" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testNoFailureOnNoChangeFilesBlock()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFailureOnNoChangeFilesBlock" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testNoFiles()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFiles" class="org.mongeez.MongeezTest"/>
        <method signature="MongeezTest.testRunTwice()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testRunTwice" class="org.mongeez.MongeezTest"/>
      </group> <!-- dao -->
    </groups>
    <test name="Command line test" duration-ms="55887" started-at="2015-04-10T15:44:37Z" finished-at="2015-04-10T15:45:33Z">
      <class name="org.mongeez.reader.FormattedJavascriptChangeSetReaderTest">
        <test-method status="PASS" signature="testGetChangeSets1()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSets1" duration-ms="200" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSets1 -->
        <test-method status="PASS" signature="testGetChangeSets2()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSets2" duration-ms="1" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSets2 -->
        <test-method status="PASS" signature="testGetChangeSetsAlternateEncoding()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSetsAlternateEncoding" duration-ms="3" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSetsAlternateEncoding -->
        <test-method status="PASS" signature="testGetChangeSetsEmptyScript()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSetsEmptyScript" duration-ms="12" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSetsEmptyScript -->
        <test-method status="PASS" signature="testGetChangeSetsIOFailure()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSetsIOFailure" duration-ms="9" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSetsIOFailure -->
        <test-method status="PASS" signature="testGetChangeSetsNoHeader()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSetsNoHeader" duration-ms="6" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSetsNoHeader -->
        <test-method status="PASS" signature="testGetChangeSetsWrongEncoding()[pri:0, instance:org.mongeez.reader.FormattedJavascriptChangeSetReaderTest@6bf256fa]" name="testGetChangeSetsWrongEncoding" duration-ms="1" started-at="2015-04-10T11:44:37Z" finished-at="2015-04-10T11:44:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetChangeSetsWrongEncoding -->
      </class> <!-- org.mongeez.reader.FormattedJavascriptChangeSetReaderTest -->
      <class name="org.mongeez.MongeezTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="571" started-at="2015-04-10T11:44:38Z" finished-at="2015-04-10T11:44:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testChangesWContextContextNotSet()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextNotSet" duration-ms="3098" started-at="2015-04-10T11:44:38Z" finished-at="2015-04-10T11:44:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangesWContextContextNotSet -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="2015" started-at="2015-04-10T11:44:41Z" finished-at="2015-04-10T11:44:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testChangesWContextContextSetToOrganizations()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextSetToOrganizations" duration-ms="1775" started-at="2015-04-10T11:44:43Z" finished-at="2015-04-10T11:44:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangesWContextContextSetToOrganizations -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="2874" started-at="2015-04-10T11:44:45Z" finished-at="2015-04-10T11:44:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testChangesWContextContextSetToUsers()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testChangesWContextContextSetToUsers" duration-ms="2191" started-at="2015-04-10T11:44:48Z" finished-at="2015-04-10T11:44:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testChangesWContextContextSetToUsers -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="2181" started-at="2015-04-10T11:44:50Z" finished-at="2015-04-10T11:44:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFailDuplicateIds()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailDuplicateIds" duration-ms="536" started-at="2015-04-10T11:44:52Z" finished-at="2015-04-10T11:44:53Z">
          <exception class="org.mongeez.validation.ValidationException">
            <message>
              <![CDATA[ChangeSetId ChangeSet-1 is not unique.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.mongeez.validation.ValidationException: ChangeSetId ChangeSet-1 is not unique.
	at org.mongeez.validation.DefaultChangeSetsValidator.changeSetIdsNotUnique(DefaultChangeSetsValidator.java:24)
	at org.mongeez.validation.DefaultChangeSetsValidator.validate(DefaultChangeSetsValidator.java:11)
	at org.mongeez.Mongeez.getChangeSets(Mongeez.java:56)
	at org.mongeez.Mongeez.process(Mongeez.java:43)
	at org.mongeez.MongeezTest.testFailDuplicateIds(MongeezTest.java:152)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- org.mongeez.validation.ValidationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailDuplicateIds -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="28" started-at="2015-04-10T11:44:53Z" finished-at="2015-04-10T11:44:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFailOnError_False()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailOnError_False" duration-ms="685" started-at="2015-04-10T11:44:53Z" finished-at="2015-04-10T11:44:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailOnError_False -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="9861" started-at="2015-04-10T11:44:53Z" finished-at="2015-04-10T11:45:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testFailOnError_True()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testFailOnError_True" duration-ms="4746" started-at="2015-04-10T11:45:03Z" finished-at="2015-04-10T11:45:08Z">
          <exception class="com.mongodb.MongoCommandException">
            <message>
              <![CDATA[Command failed with error 16722: 'exception: SyntaxError: Unexpected token }' on server 127.0.0.1:27017. The full response is { "errmsg" : "exception: SyntaxError: Unexpected token }", "code" : 16722, "ok" : 0.0 }]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.mongodb.MongoCommandException: Command failed with error 16722: 'exception: SyntaxError: Unexpected token }' on server 127.0.0.1:27017. The full response is { "errmsg" : "exception: SyntaxError: Unexpected token }", "code" : 16722, "ok" : 0.0 }
	at com.mongodb.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:75)
	at com.mongodb.connection.CommandProtocol.createCommandResult(CommandProtocol.java:140)
	at com.mongodb.connection.CommandProtocol.receiveMessage(CommandProtocol.java:131)
	at com.mongodb.connection.CommandProtocol.execute(CommandProtocol.java:84)
	at com.mongodb.connection.DefaultServer$DefaultServerProtocolExecutor.execute(DefaultServer.java:155)
	at com.mongodb.connection.DefaultServerConnection.executeProtocol(DefaultServerConnection.java:219)
	at com.mongodb.connection.DefaultServerConnection.command(DefaultServerConnection.java:146)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:182)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:173)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:128)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:106)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:97)
	at com.mongodb.operation.CommandOperationHelper.executeWrappedCommandProtocol(CommandOperationHelper.java:85)
	at com.mongodb.operation.CommandWriteOperation.execute(CommandWriteOperation.java:55)
	at com.mongodb.Mongo.execute(Mongo.java:745)
	at com.mongodb.Mongo$2.execute(Mongo.java:728)
	at com.mongodb.DB.executeCommand(DB.java:583)
	at com.mongodb.DB.doEval(DB.java:432)
	at com.mongodb.DB.eval(DB.java:446)
	at org.mongeez.dao.MongeezDao.runScript(MongeezDao.java:116)
	at org.mongeez.commands.Script.run(Script.java:32)
	at org.mongeez.ChangeSetExecutor.execute(ChangeSetExecutor.java:56)
	at org.mongeez.ChangeSetExecutor.execute(ChangeSetExecutor.java:41)
	at org.mongeez.Mongeez.process(Mongeez.java:44)
	at org.mongeez.MongeezTest.testFailOnError_True(MongeezTest.java:78)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- com.mongodb.MongoCommandException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFailOnError_True -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="2427" started-at="2015-04-10T11:45:08Z" finished-at="2015-04-10T11:45:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testMongeez()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testMongeez" duration-ms="2128" started-at="2015-04-10T11:45:10Z" finished-at="2015-04-10T11:45:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMongeez -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="1146" started-at="2015-04-10T11:45:13Z" finished-at="2015-04-10T11:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoFailureOnEmptyChangeLog()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFailureOnEmptyChangeLog" duration-ms="8248" started-at="2015-04-10T11:45:14Z" finished-at="2015-04-10T11:45:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoFailureOnEmptyChangeLog -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="1082" started-at="2015-04-10T11:45:22Z" finished-at="2015-04-10T11:45:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoFailureOnNoChangeFilesBlock()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFailureOnNoChangeFilesBlock" duration-ms="1317" started-at="2015-04-10T11:45:23Z" finished-at="2015-04-10T11:45:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoFailureOnNoChangeFilesBlock -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="2968" started-at="2015-04-10T11:45:24Z" finished-at="2015-04-10T11:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testNoFiles()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testNoFiles" duration-ms="1459" started-at="2015-04-10T11:45:27Z" finished-at="2015-04-10T11:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoFiles -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="setUp" is-config="true" duration-ms="3119" started-at="2015-04-10T11:45:29Z" finished-at="2015-04-10T11:45:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testRunTwice()[pri:0, instance:org.mongeez.MongeezTest@2812cbfa]" name="testRunTwice" duration-ms="1169" started-at="2015-04-10T11:45:32Z" finished-at="2015-04-10T11:45:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRunTwice -->
      </class> <!-- org.mongeez.MongeezTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
